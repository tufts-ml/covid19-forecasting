'''
Usage
------
To run a specific random seed
$ snakemake --config random_seed=101 --profile ../../profiles/hugheslab_cluster/ single_simulation_following_template

To run with multiple random seeds (prespecified in a config file)
$ snakemake --profile profiles/hugheslab_cluster/ many_simulations_following_template

Prerequisites
-------------
1) Need local install of anaconda
2) Need local install of Snakemake
See README.md for install instructions
'''
import glob
import os
import numpy as np

REPO_ROOT_DIR = os.environ.get("REPO_ROOT_DIR", "/cluster/tufts/hugheslab/code/covid19-forecasting/")

# Specified in configfile:
# --output_dir
# --min_random_seed 1001
# --max_random_seed 1100
# --random_seed 0
configfile: "config.json"

# Target rule to run multiple simulations saved to different CSV files
#
# Uses the 'template' defined below
rule many_simulations_following_template:
    input:
        [os.path.join(
                os.path.expandvars(config['output_dir']),          
                "results-random_seed={random_seed}.csv".format(random_seed=seed)
                )
            for seed in range(config['min_random_seed'], config['max_random_seed'])]


# Target rule to run one specific simulation (with seed provided by manual command line input)
#
# Uses the 'template' defined below
rule single_simulation_following_template:
    input:
        #"results-random_seed={random_seed}.csv".format(random_seed=config['random_seed'])
        os.path.join(
            os.path.expandvars(config['output_dir']),
            "results-random_seed={random_seed}.csv".format(random_seed=config['random_seed']),
            )

rule template:
    input:
        config_json="params_simple_example.json",
        script=glob.glob(os.path.join(REPO_ROOT_DIR, '*.py')),
        source_files=glob.glob(os.path.join(REPO_ROOT_DIR, 'semimarkov_forecaster/*.py'))

    output:
        output_csv=os.path.join(
            os.path.expandvars("{output_dir}"),
            "results-random_seed={random_seed}.csv")

    conda:
        "semimarkov_forecaster.yml"

    shell:
        """\
        dirname {output.output_csv} | xargs mkdir -p && \
        python {input.script} \
            --config_file "{input.config_json}" \
            --random_seed "{wildcards.random_seed}" \
            --output_file "{output.output_csv}" \
        """

